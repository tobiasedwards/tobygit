{"type":"blob","contents":"var fs = require('fs');\nvar path = require('path');\nvar process = require('process');\n\nmodule.exports = {\n  /* The name of the tobygit directory */\n  TOBYGIT_DIR: '.tgit',\n\n  /* Returns the directory path from which the script was called */\n  workingDir: function() {\n    return process.cwd();\n  },\n\n  /* Returns the path to the nearest tobygit directory.\n   * The directories searched are the current working directory and\n   * its parents.\n   * Null is returned if there is no tobygit directory found.\n   */\n  tobygitDirPath: function() {\n    var current = this.workingDir();\n\n    while (current != '/') {\n      if (fs.readdirSync(current).indexOf(this.TOBYGIT_DIR) != -1) {\n        // TODO: Handle case if .tgit is a file not a dir\n        return path.join(current, this.TOBYGIT_DIR);\n      } else {\n        current = path.join(current, '..');\n      }\n    }\n\n    return null;\n  },\n\n  /* Returns the current projects root path (or null if not in a project) */\n  projectRootPath: function() {\n    var tobygitDirPath = this.tobygitDirPath();\n\n    if (tobygitDirPath != null) {\n      return path.join(tobygitDirPath, '..');\n    }\n\n    return null;\n  },\n\n  /* Creates the tobygit directory and appropriate subdirectories\n   * in the current working directory.\n   */\n  createTobygitDir: function() {\n    var tobygitDirPath = path.join(this.workingDir(), this.TOBYGIT_DIR)\n    fs.mkdirSync(tobygitDirPath);\n    fs.mkdirSync(path.join(tobygitDirPath, 'objects'));\n  },\n};\n"}